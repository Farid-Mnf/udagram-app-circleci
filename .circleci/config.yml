version: 2.1
orbs:
  # aws orb for eb cli command
  eb: circleci/aws-elastic-beanstalk@2.0.1
  # nodeJs runtime to run nodejs apps
  node: circleci/node@4.1.0
  # aws orb to run all aws commands. ex: aws s3 ls
  aws-cli: circleci/aws-cli@3.0.0
  # that orb is needed to run tests on browser
  browser-tools: circleci/browser-tools@1.2.3
jobs:
  build:
    working_directory: ~/udagram
    docker:
      - image: cimg/node:16.13.1-browsers
    executor: aws-cli/default
    steps:
      - browser-tools/install-chrome # install chrome for testing Frontend
      - browser-tools/install-chromedriver
      - run:
          command: |
            google-chrome --version
            chromedriver --version
          name: Check install
      - aws-cli/setup # setup aws cli to use aws s3 command
      - eb/setup      # setup aws elastic beanstalk to use 'eb' command 
      - run:
          name: Setup Environment Variables
          command: |
            eb setenv AWS_PROFILE=$AWS_PROFILE
            eb setenv PORT=$POST
            eb setenv POSTGRES_DB=$POSTGRES_DB
            eb setenv POSTGRES_HOST=$POSTGRES_HOST
            eb setenv POSTGRES_USERNAME=$POSTGRES_USERNAME
            eb setenv POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            eb setenv URL=$URL

      - run: node --version
      - checkout # get code from VCS
      - restore_cache: # setup caching for browser
          key: udagram-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: udagram-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"      
      - run: # install npm packages and dependencies
          name: frontend_install
          command: |
            npm run frontend:install
      - run:
          name: backend_install
          command: |
            npm run backend:install
      - run: # run deploy.sh script in each app to deploy app to aws cloud
          name: deploy backend
          command: |
            npm run backend:deploy
      - run:
          name: deploy frontend
          command: |
            npm run frontend:deploy
      - run: # run Frontend test
          name: frontend test
          command: |
            npm run frontend:test